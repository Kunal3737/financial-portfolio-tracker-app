{"version":3,"sources":["components/AllStocks.js","components/AddStocks.js","components/MyStocks.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","default","AllStocks","props","stopTrackingButtonClicked","id","symbol","name","console","log","delete","then","response","data","catch","error","post","setState","isStopTracking","fromChild","state","resp","get","fetchedResult","key","push","this","isButtonClicked","length","items","map","item","noOfShares","buyPrice","currentPrice","profitLoss","className","onClick","Component","AddStocks","addStockBtn","IdOfStock","res","today","Date","date","getDate","month","getMonth","wholeDate","getFullYear","day","getDay","current_Price","currentStockName","currentStockSymbol","todaysDate","document","querySelector","style","display","addEventListener","value","a","countChild","no_Of_Shares","buyingPrice","errorMessage","responseFromStocksInTable","noShares","profitloss","params","float","textAlign","color","marginBottom","type","min","placeholder","width","addBtnClicked","bind","names","React","MyStocks","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a0efa97e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './AllStocks.css'\r\nconst axios = require('axios').default;\r\n\r\nclass AllStocks extends Component {  \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            resp: [],\r\n            isStopTracking: false\r\n        }\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios.get(`https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable.json`)\r\n            .then(response => {\r\n                const fetchedResult = [];\r\n                for (let key in response.data){\r\n                    fetchedResult.push({\r\n                        ...response.data[key],\r\n                        id:key\r\n                    })\r\n                }\r\n                this.setState({resp : fetchedResult})\r\n                console.log(\"Response: \",this.state.resp);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    } \r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isButtonClicked || this.state.isStopTracking) {\r\n            axios.get(`https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable.json`)\r\n            .then(response => {\r\n                const fetchedResult = [];\r\n                for (let key in response.data){\r\n                    fetchedResult.push({\r\n                        ...response.data[key],\r\n                        id:key\r\n                    })\r\n                }\r\n                this.setState({resp : fetchedResult})\r\n                console.log(\"Response: \",this.state.resp.length);\r\n                this.setState({isStopTracking: false})\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n        })\r\n        }\r\n    }\r\n    \r\n    stopTrackingButtonClicked = (id, symbol, name) => {\r\n        console.log(\"ID:\", id);\r\n        axios.delete(`https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable/${id}.json`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.post(`https://financial-portfolio-trac-40940.firebaseio.com/mystocks.json`, {\r\n                \"symbol\": symbol,\r\n                \"name\": name\r\n            }\r\n        )\r\n            .then(response => {\r\n                console.log(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        \r\n        this.setState({isStopTracking: true})\r\n\r\n        this.props.fromChild(true);\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.items);\r\n        return (\r\n            <tbody>\r\n                {this.state.resp.map(item => {\r\n                    return (\r\n                        <tr key = {item.id}>\r\n                            <td>{item.symbol}</td>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.noOfShares}</td>\r\n                            <td>{item.buyPrice}</td>\r\n                            <td>{item.currentPrice}</td>\r\n                            <td>{item.profitLoss}</td>\r\n\r\n                            <td><button className=\"StopTrackingBtn\" onClick= {(id, symbol, name) => {this.stopTrackingButtonClicked(item.id, item.symbol, item.name)}}>x</button></td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default AllStocks\r\n","import React from 'react'\r\nimport AllStocks from './AllStocks'\r\nimport './AddStocks.css'\r\n\r\nconst axios = require('axios').default;\r\nclass AddStocks extends React.Component {\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                resp : [],\r\n                currentStockName : '',\r\n                currentStockSymbol : '',\r\n                todaysDate: '',\r\n                no_Of_Shares : '',\r\n                buyingPrice : '',\r\n                errorMessage : '',\r\n                currentPrice : '',\r\n                profitLoss : '',\r\n                isButtonClicked: false,\r\n                IdOfStock : '',\r\n                countChild: true,\r\n                responseFromStocksInTable : []\r\n            }\r\n\r\n        }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://financial-portfolio-trac-40940.firebaseio.com/mystocks.json`)\r\n            .then(response => {\r\n                const fetchedResult = [];\r\n                for (let key in response.data){\r\n                    fetchedResult.push({\r\n                        ...response.data[key],\r\n                        id:key\r\n                    })\r\n                }\r\n                this.setState({resp : fetchedResult})\r\n                console.log(this.state.resp);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    } \r\n\r\n    componentDidUpdate() {\r\n        if (this.state.isButtonClicked || this.state.countChild) {\r\n            this.setState({countChild: false})\r\n            axios.get(`https://financial-portfolio-trac-40940.firebaseio.com/mystocks.json`)\r\n            .then(response => {\r\n                const fetchedResult = [];\r\n                for (let key in response.data){\r\n                    fetchedResult.push({\r\n                        ...response.data[key],\r\n                        id:key\r\n                    })\r\n                }\r\n                this.setState({resp : fetchedResult})\r\n                console.log(this.state.resp);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n            this.setState({isButtonClicked : false})\r\n        \r\n\r\n            axios.get(`https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable.json`)\r\n                .then(response => {\r\n                    const fetchedResult = [];\r\n                    for (let key in response.data){\r\n                        fetchedResult.push({\r\n                            ...response.data[key],\r\n                            id:key\r\n                        })\r\n                    }\r\n                    this.setState({responseFromStocksInTable : fetchedResult})\r\n                    console.log(\"Response: \",this.state.responseFromStocksInTable.length);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    addStockBtn = (symbol, name, id) => {\r\n        this.setState({IdOfStock : id})\r\n\r\n        axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=HYM09DQLAGWQMN62`)\r\n            .then(res => {\r\n                const resp = res.data;\r\n                var today = new Date();\r\n                var date = today.getDate();\r\n                var month = today.getMonth() + 1;\r\n                if (date < 10)  {\r\n                    date = \"0\" + (date);\r\n                }\r\n\r\n                if (month < 10)  {\r\n                    month = \"0\" + (month);\r\n                }\r\n\r\n                var wholeDate = today.getFullYear() + '-' + (month) + '-' + (date);\r\n                console.log(wholeDate);\r\n                var day = today.getDay();\r\n\r\n                // For Saturday\r\n                if (day === 6) {\r\n                    wholeDate = today.getFullYear() + '-' + (month) + '-' + (date - 1);\r\n                    var current_Price = resp['Time Series (Daily)'][wholeDate]['1. open'];\r\n                }\r\n\r\n                // For Sunday\r\n                if (day === 0) {\r\n                    wholeDate = today.getFullYear() + '-' + (month) + '-' + (date - 2);\r\n                    current_Price = resp['Time Series (Daily)'][wholeDate]['1. open'];\r\n                }\r\n                \r\n                current_Price = resp['Time Series (Daily)'][wholeDate]['1. open'];\r\n                console.log(current_Price);\r\n \r\n                 this.setState({\r\n                    currentStockName : name,\r\n                    currentStockSymbol : symbol,\r\n                    todaysDate: wholeDate,\r\n                    currentPrice : current_Price\r\n                })\r\n\r\n            })\r\n            \r\n            document.querySelector(\".outerModal\").style.display=\"block\";\r\n\r\n            document.querySelector(\"#closeSymbol\").addEventListener('click', () => {\r\n                document.querySelector(\".outerModal\").style.display=\"none\";    \r\n            })\r\n    }\r\n\r\n    async addBtnClicked(){\r\n\r\n        var noShares = document.querySelector(\"#noShares\").value\r\n        console.log(noShares);\r\n\r\n        var buyPrice = document.querySelector(\"#buyPrice\").value\r\n        console.log(buyPrice);\r\n        \r\n        var profitloss = (this.state.currentPrice - buyPrice) * noShares;\r\n        console.log(profitloss);\r\n\r\n        if (noShares > 0 && buyPrice > 0) {            \r\n            await this.setState ({\r\n                no_Of_Shares : noShares,\r\n                buyingPrice : buyPrice,\r\n                profitLoss : profitloss,\r\n                errorMessage: ''\r\n            });\r\n\r\n            document.querySelector(\".outerModal\").style.display=\"none\"; \r\n            noShares = document.querySelector(\"#noShares\").value = '';\r\n            buyPrice = document.querySelector(\"#buyPrice\").value = '';\r\n\r\n            axios.delete(`https://financial-portfolio-trac-40940.firebaseio.com/mystocks/${this.state.IdOfStock}.json`, {\r\n                params: {\r\n                    \"name\": this.state.currentStockName,\r\n                    \"symbol\": this.state.currentStockSymbol\r\n                }\r\n            })\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.setState({isButtonClicked : true})\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n            const data = {\r\n                \"symbol\": this.state.currentStockSymbol,\r\n                \"name\": this.state.currentStockName,\r\n                \"noOfShares\": this.state.no_Of_Shares,\r\n                \"buyPrice\": this.state.buyingPrice,\r\n                \"currentPrice\": this.state.currentPrice,\r\n                \"profitLoss\": this.state.profitLoss\r\n            }\r\n    \r\n            axios.post(`https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable.json`,data)\r\n                .then(response => {\r\n                    console.log(\"Response: \",response);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n\r\n        else {\r\n            this.setState({errorMessage : \"Please fill all the inputs\"})\r\n        } \r\n    }\r\n\r\n    fromChild = async (value) => {\r\n        await this.setState({countChild: value})\r\n        console.log(\"Count Child:\",this.state.countChild);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"AddStocksTitle\">\r\n                {this.state.responseFromStocksInTable.length === 0 ?\r\n                <h1 className=\"noStock\" >No stocks have been selected</h1> : \r\n                <table className=\"MyStocksTable\">\r\n                    {<AllStocks\r\n                        isButtonClicked = {this.state.isButtonClicked}\r\n                        fromChild = {this.fromChild}\r\n                    />}\r\n                </table>\r\n                }\r\n                <div className=\"outerModal\">\r\n                    <div className=\"mainModal\">\r\n                        <strong id=\"closeSymbol\" style = {{float: \"right\"}}>+</strong><br></br>\r\n                        <h1 style = {{textAlign: \"center\"}}>Add {this.state.currentStockName} to My Stocks</h1>\r\n                        <h4 style = {{textAlign: \"center\", color: \"red\"}}>{this.state.errorMessage}</h4>\r\n                        <strong style = {{textAlign: \"left\", marginBottom:'1%'}}>Company Name: </strong><span style = {{float: \"right\" }}>{this.state.currentStockName}</span><br></br>\r\n\r\n                        <strong style = {{textAlign: \"left\", marginBottom:'1%'}}>No. of Shares: </strong><input style = {{float: \"right\"}} type=\"number\" min=\"1\" placeholder=\"No. of Shares\" id=\"noShares\"/><br></br>\r\n\r\n                        <strong style = {{textAlign: \"left\", marginBottom:'1%'}}>Buy Price: </strong><input style = {{float: \"right\"}} type=\"number\" min=\"1\" placeholder=\"Buying Price\" id=\"buyPrice\"/><br></br>\r\n\r\n                        <strong style = {{textAlign: \"left\", marginBottom:'1%'}}>Buy Date: </strong><input id=\"buyDate\" style = {{float: \"right\"}} type=\"date\" value={this.state.todaysDate} /><br></br>\r\n\r\n                        <div style = {{textAlign: \"center\"}}><button id=\"addBtn\" type=\"submit\" className=\"AddButton\" style = {{width: \"10%\"}} onClick={this.addBtnClicked.bind(this)}>Add</button></div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <h3>Add Stocks to my Stocks</h3>\r\n                    <ul>\r\n                        {this.state.resp.map((names) => <li key={names.id}><button style={{\"width\":\"100px\"}} className=\"StockButton\"\r\n                        onClick={(symbol, name, id) => this.addStockBtn(names.symbol, names.name, names.id)}>{names.symbol}</button> {names.name}</li>)}\r\n                   </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStocks\r\n","import React, { Component } from 'react'\r\nimport './MyStocks.css';\r\nimport AddStocks from './AddStocks'\r\n\r\nclass MyStocks extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"MyStocks\">\r\n                <h3>My Stocks</h3>\r\n                <table className=\"MyStocksTable\">\r\n                    <thead>\r\n                        <tr className=\"stockHeader\">\r\n                            <th>Stock symbol</th>\r\n                            <th>Stock name</th>\r\n                            <th>No.of shares</th>\r\n                            <th>Buy price</th>\r\n                            <th>Current price</th>\r\n                            <th>Profit/Loss</th>\r\n                            <th>Stop Tracking</th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                <AddStocks/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyStocks\r\n","import React from 'react';\nimport './App.css';\nimport MyStocks from  './components/MyStocks'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <strong>FInancial Portfolio Tracker</strong>\n      </div>\n      <MyStocks/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}