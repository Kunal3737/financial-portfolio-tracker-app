{"version":3,"sources":["components/AllStocks.js","components/AddStocks.js","components/MyStocks.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","default","AllStocks","props","stopTrackingButtonClicked","id","symbol","name","console","log","delete","then","response","data","catch","error","post","setState","isStopTracking","fromChild","state","resp","get","fetchedResult","key","push","this","isButtonClicked","length","items","map","item","noOfShares","buyPrice","currentPrice","profitLoss","className","onClick","Component","AddStocks","addStockBtn","IdOfStock","res","Object","keys","today","Date","date","getDate","month","getMonth","getFullYear","wholeDate","day","getDay","current_Price","currentStockName","currentStockSymbol","todaysDate","document","querySelector","style","display","addEventListener","value","a","countChild","no_Of_Shares","buyingPrice","errorMessage","responseFromStocksInTable","noShares","profitloss","params","float","textAlign","color","marginBottom","type","min","placeholder","readOnly","width","addBtnClicked","bind","names","React","MyStocks","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.28fb1e53.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './AllStocks.css'\r\nconst axios = require('axios').default;\r\n\r\nclass AllStocks extends Component {  \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            resp: [],\r\n            isStopTracking: false\r\n        }\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios.get(`https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable.json`)\r\n            .then(response => {\r\n                const fetchedResult = [];\r\n                for (let key in response.data){\r\n                    fetchedResult.push({\r\n                        ...response.data[key],\r\n                        id:key\r\n                    })\r\n                }\r\n                this.setState({resp : fetchedResult})\r\n                console.log(\"Response: \",this.state.resp);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    } \r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isButtonClicked || this.state.isStopTracking) {\r\n            axios.get(`https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable.json`)\r\n            .then(response => {\r\n                const fetchedResult = [];\r\n                for (let key in response.data){\r\n                    fetchedResult.push({\r\n                        ...response.data[key],\r\n                        id:key\r\n                    })\r\n                }\r\n                this.setState({resp : fetchedResult})\r\n                console.log(\"Response: \",this.state.resp.length);\r\n                this.setState({isStopTracking: false})\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n        })\r\n        }\r\n    }\r\n    \r\n    stopTrackingButtonClicked = (id, symbol, name) => {\r\n        console.log(\"ID:\", id);\r\n        axios.delete(`https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable/${id}.json`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.post(`https://financial-portfolio-trac-40940.firebaseio.com/mystocks.json`, {\r\n                \"symbol\": symbol,\r\n                \"name\": name\r\n            }\r\n        )\r\n            .then(response => {\r\n                console.log(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        \r\n        this.setState({isStopTracking: true})\r\n\r\n        this.props.fromChild(true);\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.items);\r\n        return (\r\n            <tbody>\r\n                {this.state.resp.map(item => {\r\n                    return (\r\n                        <tr key = {item.id}>\r\n                            <td>{item.symbol}</td>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.noOfShares}</td>\r\n                            <td>{item.buyPrice}</td>\r\n                            <td>{item.currentPrice}</td>\r\n                            <td>{item.profitLoss}</td>\r\n\r\n                            <td><button className=\"StopTrackingBtn\" onClick= {(id, symbol, name) => {this.stopTrackingButtonClicked(item.id, item.symbol, item.name)}}>x</button></td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default AllStocks\r\n","import React from \"react\";\r\nimport AllStocks from \"./AllStocks\";\r\nimport \"./AddStocks.css\";\r\n\r\nconst axios = require(\"axios\").default;\r\nclass AddStocks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resp: [],\r\n      currentStockName: \"\",\r\n      currentStockSymbol: \"\",\r\n      todaysDate: \"\",\r\n      no_Of_Shares: \"\",\r\n      buyingPrice: \"\",\r\n      errorMessage: \"\",\r\n      currentPrice: \"\",\r\n      profitLoss: \"\",\r\n      isButtonClicked: false,\r\n      IdOfStock: \"\",\r\n      countChild: true,\r\n      responseFromStocksInTable: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://financial-portfolio-trac-40940.firebaseio.com/mystocks.json`\r\n      )\r\n      .then((response) => {\r\n        const fetchedResult = [];\r\n        for (let key in response.data) {\r\n          fetchedResult.push({\r\n            ...response.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        this.setState({ resp: fetchedResult });\r\n        console.log(this.state.resp);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.isButtonClicked || this.state.countChild) {\r\n      this.setState({ countChild: false });\r\n      axios\r\n        .get(\r\n          `https://financial-portfolio-trac-40940.firebaseio.com/mystocks.json`\r\n        )\r\n        .then((response) => {\r\n          const fetchedResult = [];\r\n          for (let key in response.data) {\r\n            fetchedResult.push({\r\n              ...response.data[key],\r\n              id: key,\r\n            });\r\n          }\r\n          this.setState({ resp: fetchedResult });\r\n          console.log(this.state.resp);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      this.setState({ isButtonClicked: false });\r\n\r\n      axios\r\n        .get(\r\n          `https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable.json`\r\n        )\r\n        .then((response) => {\r\n          const fetchedResult = [];\r\n          for (let key in response.data) {\r\n            fetchedResult.push({\r\n              ...response.data[key],\r\n              id: key,\r\n            });\r\n          }\r\n          this.setState({ responseFromStocksInTable: fetchedResult });\r\n          console.log(\r\n            \"Response: \",\r\n            this.state.responseFromStocksInTable.length\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  addStockBtn = (symbol, name, id) => {\r\n    this.setState({ IdOfStock: id });\r\n\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=HYM09DQLAGWQMN62`\r\n      )\r\n      .then((res) => {\r\n        var resp = {};\r\n        resp = res.data[\"Time Series (Daily)\"];\r\n        console.log(resp[Object.keys(resp)[0]]);\r\n        var today = new Date();\r\n        console.log(today);\r\n        var date = today.getDate();\r\n        console.log(date);\r\n        var month = today.getMonth() + 1;\r\n\r\n        if (date < 10) {\r\n          console.log(date);\r\n          date = \"0\" + date;\r\n        }\r\n\r\n        if (month < 10) {\r\n          month = \"0\" + month;\r\n        }\r\n        console.log(today.getFullYear());\r\n        console.log(month);\r\n        console.log(date);\r\n        var wholeDate = today.getFullYear() + \"-\" + month + \"-\" + date;\r\n        console.log(wholeDate);\r\n        var day = today.getDay();\r\n        console.log(day);\r\n\r\n        var current_Price = resp[Object.keys(resp)[0]];\r\n        console.log(current_Price);\r\n\r\n        this.setState({\r\n          currentStockName: name,\r\n          currentStockSymbol: symbol,\r\n          todaysDate: wholeDate,\r\n          currentPrice: current_Price[\"1. open\"],\r\n        });\r\n      });\r\n\r\n    document.querySelector(\".outerModal\").style.display = \"block\";\r\n\r\n    document.querySelector(\"#closeSymbol\").addEventListener(\"click\", () => {\r\n      document.querySelector(\".outerModal\").style.display = \"none\";\r\n    });\r\n  };\r\n\r\n  async addBtnClicked() {\r\n    var noShares = document.querySelector(\"#noShares\").value;\r\n    console.log(noShares);\r\n\r\n    var buyPrice = document.querySelector(\"#buyPrice\").value;\r\n    console.log(buyPrice);\r\n\r\n    console.log(this.state.currentPrice);\r\n    var profitloss = (this.state.currentPrice - buyPrice) * noShares;\r\n    console.log(profitloss);\r\n\r\n    if (noShares > 0 && buyPrice > 0) {\r\n      await this.setState({\r\n        no_Of_Shares: noShares,\r\n        buyingPrice: buyPrice,\r\n        profitLoss: profitloss,\r\n        errorMessage: \"\",\r\n      });\r\n\r\n      document.querySelector(\".outerModal\").style.display = \"none\";\r\n      noShares = document.querySelector(\"#noShares\").value = \"\";\r\n      buyPrice = document.querySelector(\"#buyPrice\").value = \"\";\r\n\r\n      axios\r\n        .delete(\r\n          `https://financial-portfolio-trac-40940.firebaseio.com/mystocks/${this.state.IdOfStock}.json`,\r\n          {\r\n            params: {\r\n              name: this.state.currentStockName,\r\n              symbol: this.state.currentStockSymbol,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          this.setState({ isButtonClicked: true });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n      const data = {\r\n        symbol: this.state.currentStockSymbol,\r\n        name: this.state.currentStockName,\r\n        noOfShares: this.state.no_Of_Shares,\r\n        buyPrice: this.state.buyingPrice,\r\n        currentPrice: this.state.currentPrice,\r\n        profitLoss: this.state.profitLoss,\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          `https://financial-portfolio-trac-40940.firebaseio.com/stocksInTable.json`,\r\n          data\r\n        )\r\n        .then((response) => {\r\n          console.log(\"Response: \", response);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      this.setState({ errorMessage: \"Please fill all the inputs\" });\r\n    }\r\n  }\r\n\r\n  fromChild = async (value) => {\r\n    await this.setState({ countChild: value });\r\n    console.log(\"Count Child:\", this.state.countChild);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AddStocksTitle\">\r\n        {this.state.responseFromStocksInTable.length === 0 ? (\r\n          <h1 className=\"noStock\">No stocks have been selected</h1>\r\n        ) : (\r\n          <table className=\"MyStocksTable\">\r\n            {\r\n              <AllStocks\r\n                isButtonClicked={this.state.isButtonClicked}\r\n                fromChild={this.fromChild}\r\n              />\r\n            }\r\n          </table>\r\n        )}\r\n        <div className=\"outerModal\">\r\n          <div className=\"mainModal\">\r\n            <strong id=\"closeSymbol\" style={{ float: \"right\" }}>\r\n              +\r\n            </strong>\r\n            <br></br>\r\n            <h1 style={{ textAlign: \"center\" }}>\r\n              Add {this.state.currentStockName} to My Stocks\r\n            </h1>\r\n            <h4 style={{ textAlign: \"center\", color: \"red\" }}>\r\n              {this.state.errorMessage}\r\n            </h4>\r\n            <strong style={{ textAlign: \"left\", marginBottom: \"1%\" }}>\r\n              Company Name:{\" \"}\r\n            </strong>\r\n            <span style={{ float: \"right\" }}>\r\n              {this.state.currentStockName}\r\n            </span>\r\n            <br></br>\r\n\r\n            <strong style={{ textAlign: \"left\", marginBottom: \"1%\" }}>\r\n              No. of Shares:{\" \"}\r\n            </strong>\r\n            <input\r\n              style={{ float: \"right\" }}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              placeholder=\"No. of Shares\"\r\n              id=\"noShares\"\r\n            />\r\n            <br></br>\r\n\r\n            <strong style={{ textAlign: \"left\", marginBottom: \"1%\" }}>\r\n              Buy Price:{\" \"}\r\n            </strong>\r\n            <input\r\n              style={{ float: \"right\" }}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              placeholder=\"Buying Price\"\r\n              id=\"buyPrice\"\r\n            />\r\n            <br></br>\r\n\r\n            <strong style={{ textAlign: \"left\", marginBottom: \"1%\" }}>\r\n              Buy Date:{\" \"}\r\n            </strong>\r\n            <input\r\n              id=\"buyDate\"\r\n              style={{ float: \"right\" }}\r\n              type=\"date\"\r\n              value={this.state.todaysDate}\r\n              readOnly\r\n            />\r\n            <br></br>\r\n\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <button\r\n                id=\"addBtn\"\r\n                type=\"submit\"\r\n                className=\"AddButton\"\r\n                style={{ width: \"10%\" }}\r\n                onClick={this.addBtnClicked.bind(this)}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <h3>Add Stocks to my Stocks</h3>\r\n          <ul>\r\n            {this.state.resp.map((names) => (\r\n              <li key={names.id}>\r\n                <button\r\n                  style={{ width: \"100px\" }}\r\n                  className=\"StockButton\"\r\n                  onClick={(symbol, name, id) =>\r\n                    this.addStockBtn(names.symbol, names.name, names.id)\r\n                  }\r\n                >\r\n                  {names.symbol}\r\n                </button>{\" \"}\r\n                {names.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddStocks;\r\n","import React, { Component } from 'react'\r\nimport './MyStocks.css';\r\nimport AddStocks from './AddStocks'\r\n\r\nclass MyStocks extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"MyStocks\">\r\n                <h3>My Stocks</h3>\r\n                <table className=\"MyStocksTable\">\r\n                    <thead>\r\n                        <tr className=\"stockHeader\">\r\n                            <th>Stock symbol</th>\r\n                            <th>Stock name</th>\r\n                            <th>No.of shares</th>\r\n                            <th>Buy price</th>\r\n                            <th>Current price</th>\r\n                            <th>Profit/Loss</th>\r\n                            <th>Stop Tracking</th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                <AddStocks/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyStocks\r\n","import React from 'react';\nimport './App.css';\nimport MyStocks from  './components/MyStocks'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <strong>FInancial Portfolio Tracker</strong>\n      </div>\n      <MyStocks/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}